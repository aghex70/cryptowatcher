# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fetcher.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\rfetcher.proto\x12\x17notcoolj.transaction.v1"\x1c\n\nDataSource\x12\x0e\n\x06source\x18\x01 \x01(\t"J\n\x12\x46\x65tchTradesRequest\x12\x34\n\x07sources\x18\x01 \x03(\x0b\x32#.notcoolj.transaction.v1.DataSource"\x12\n\x04Task\x12\n\n\x02id\x18\x01 \x01(\x05"C\n\x13\x46\x65tchTradesResponse\x12,\n\x05tasks\x18\x01 \x03(\x0b\x32\x1d.notcoolj.transaction.v1.Task"F\n\x16StopFetchTradesRequest\x12,\n\x05tasks\x18\x01 \x03(\x0b\x32\x1d.notcoolj.transaction.v1.Task"*\n\x17StopFetchTradesResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x32\xf4\x01\n\x0e\x46\x65tcherService\x12j\n\x0b\x46\x65tchTrades\x12+.notcoolj.transaction.v1.FetchTradesRequest\x1a,.notcoolj.transaction.v1.FetchTradesResponse"\x00\x12v\n\x0fStopFetchTrades\x12/.notcoolj.transaction.v1.StopFetchTradesRequest\x1a\x30.notcoolj.transaction.v1.StopFetchTradesResponse"\x00\x42\x14Z\x12github.com/cryptowb\x06proto3'
)


_DATASOURCE = DESCRIPTOR.message_types_by_name["DataSource"]
_FETCHTRADESREQUEST = DESCRIPTOR.message_types_by_name["FetchTradesRequest"]
_TASK = DESCRIPTOR.message_types_by_name["Task"]
_FETCHTRADESRESPONSE = DESCRIPTOR.message_types_by_name["FetchTradesResponse"]
_STOPFETCHTRADESREQUEST = DESCRIPTOR.message_types_by_name["StopFetchTradesRequest"]
_STOPFETCHTRADESRESPONSE = DESCRIPTOR.message_types_by_name["StopFetchTradesResponse"]
DataSource = _reflection.GeneratedProtocolMessageType(
    "DataSource",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATASOURCE,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.DataSource)
    },
)
_sym_db.RegisterMessage(DataSource)

FetchTradesRequest = _reflection.GeneratedProtocolMessageType(
    "FetchTradesRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _FETCHTRADESREQUEST,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.FetchTradesRequest)
    },
)
_sym_db.RegisterMessage(FetchTradesRequest)

Task = _reflection.GeneratedProtocolMessageType(
    "Task",
    (_message.Message,),
    {
        "DESCRIPTOR": _TASK,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.Task)
    },
)
_sym_db.RegisterMessage(Task)

FetchTradesResponse = _reflection.GeneratedProtocolMessageType(
    "FetchTradesResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _FETCHTRADESRESPONSE,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.FetchTradesResponse)
    },
)
_sym_db.RegisterMessage(FetchTradesResponse)

StopFetchTradesRequest = _reflection.GeneratedProtocolMessageType(
    "StopFetchTradesRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STOPFETCHTRADESREQUEST,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.StopFetchTradesRequest)
    },
)
_sym_db.RegisterMessage(StopFetchTradesRequest)

StopFetchTradesResponse = _reflection.GeneratedProtocolMessageType(
    "StopFetchTradesResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _STOPFETCHTRADESRESPONSE,
        "__module__": "fetcher_pb2"
        # @@protoc_insertion_point(class_scope:notcoolj.transaction.v1.StopFetchTradesResponse)
    },
)
_sym_db.RegisterMessage(StopFetchTradesResponse)

_FETCHERSERVICE = DESCRIPTOR.services_by_name["FetcherService"]
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"Z\022github.com/cryptow"
    _DATASOURCE._serialized_start = 42
    _DATASOURCE._serialized_end = 70
    _FETCHTRADESREQUEST._serialized_start = 72
    _FETCHTRADESREQUEST._serialized_end = 146
    _TASK._serialized_start = 148
    _TASK._serialized_end = 166
    _FETCHTRADESRESPONSE._serialized_start = 168
    _FETCHTRADESRESPONSE._serialized_end = 235
    _STOPFETCHTRADESREQUEST._serialized_start = 237
    _STOPFETCHTRADESREQUEST._serialized_end = 307
    _STOPFETCHTRADESRESPONSE._serialized_start = 309
    _STOPFETCHTRADESRESPONSE._serialized_end = 351
    _FETCHERSERVICE._serialized_start = 354
    _FETCHERSERVICE._serialized_end = 598
# @@protoc_insertion_point(module_scope)
