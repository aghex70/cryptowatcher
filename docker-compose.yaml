version: '3.9'

services:
  fetcher:
    build:
      context: ./fetcher
      dockerfile: Dockerfile
    env_file:
      - ./fetcher/.env
    command: [python, /app/fetcher/main.py]
    ports:
      - "10002:10002"
    depends_on:
      - worker

  mongodb:
    image: bitnami/mongodb
    environment:
        - MONGO_INITDB_DATABASE=fetcher
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/fetcher --quiet
      interval: 5s
      timeout: 5s
      retries: 10

  worker:
    build:
      context: ./fetcher
      dockerfile: Dockerfile
    env_file:
      - ./fetcher/.env
    command: [celery, --app, fetcher.app.worker.app, worker, --concurrency=8, --loglevel=INFO]
    depends_on:
      - redis
      - mongodb

  courier:
    build:
      context: ./courier
      dockerfile: Dockerfile
    command: [python, /app/courier-py/main.py, --queue=sender]
    env_file:
      - ./courier/.env
    depends_on:
        mongodb:
          condition: service_healthy

  interceptor:
    build:
      context: ./interceptor
      dockerfile: Dockerfile
    command: [python, /app/interceptor-py/main.py, --queue=receiver]
    env_file:
      - ./interceptor/.env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:alpine
    command: [redis-server, --port, "10379"]

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:10379/0
      - FLOWER_PORT=10555
    ports:
      - "10555:10555"
    depends_on:
      - worker
      - redis

  cwapi:
    build:
      context: cwapi
      dockerfile: Dockerfile
    command: [go, run, ./cmd/main.go]
    env_file:
      - cwapi/config/.env
    ports:
      - "10001:10001"
    depends_on:
      fetcher:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_started
    links:
      - fetcher

  db:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cryptowatcher
      - MYSQL_USER=crypto
      - MYSQL_PASSWORD=crypto
      - MYSQL_TCP_PORT=10306
    ports:
      - "10306:10306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "db", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 10