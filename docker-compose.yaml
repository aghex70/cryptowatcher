version: '3.9'

services:
  fetcher:
    build:
      context: ./fetcher
      dockerfile: Dockerfile
    command: [python, ./fetcher/main.py]
    env_file:
      - ./fetcher/.env_fetcher
    ports:
      - "10002:10002"
    depends_on:
      - worker

  mongodb:
    image: bitnami/mongodb
    environment:
        - MONGO_INITDB_DATABASE=fetcher
    ports:
      - "27017:27017"

  worker:
    build: ./fetcher
    env_file:
      - ./fetcher/.env_fetcher
    command: [celery, --app, fetcher.worker.app, worker, --concurrency=8, --loglevel=INFO]
    depends_on:
      - redis
      - mongodb

  courier:
    build:
      context: ./courier
      dockerfile: Dockerfile
    command: [python, /app/courier-py/main.py, --queue=sender]
    env_file:
      - ./courier/.env
    depends_on:
        - mongodb

  interceptor:
    build:
      context: ./interceptor
      dockerfile: Dockerfile
    command: [python, /app/interceptor-py/main.py, --queue=receiver]
    env_file:
      - ./interceptor/.env
    depends_on:
      - db

  redis:
    image: redis:alpine

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:10379/0
      - FLOWER_PORT=10555
    ports:
      - "10555:10555"
    depends_on:
      - worker
      - redis

  gapi:
    build:
      context: ./gapi
      dockerfile: Dockerfile
    command: [go, run, ./cmd/main.go]
    env_file:
      - ./gapi/config/.env_gapi
    ports:
      - "10001:10001"
    depends_on:
      - db
#    networks:
#      - cryptowatcher
    links:
      - fetcher

  db:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cryptowatcher
      - MYSQL_USER=crypto
      - MYSQL_PASSWORD=crypto
#      - MYSQL_HOST=db
      - MYSQL_TCP_PORT=10306
    ports:
      - "10306:10306"